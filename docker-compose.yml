### Never send your "passwords" in Production ###

services:
  postgresql:
    image: ${POSTGRES_IMAGE}
    container_name: postgresql
    env_file: .env
    restart: ${RESTART_MODE_1}
    environment:
      POSTGRES_USER: ${DEFAULT_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    expose:
      - ${POSTGRES_PORT}
    volumes:
      - ${POSTGRES_SYNC_VOLUME}
    networks:
      - ${DEFAULT_NETWORK}
    deploy:
      resources:
        limits:
          cpus: 2
          memory: 4096M
    memswap_limit: 8192M

  mongodb:
    image: ${MONGODB_IMAGE}
    container_name: mongodb
    env_file: .env
    restart: ${RESTART_MODE_1}
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DEFAULT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD} 
    expose:
      - ${MONGODB_PORT}
    volumes:
      - ${MONGODB_SYNC_VOLUME}
    networks:
      - ${DEFAULT_NETWORK}
    deploy:
      resources:
        limits:
          cpus: 2
          memory: 4096M
    memswap_limit: 8192M

  airflow:
    build:
      context: ${AIRFLOW_PATH}
      dockerfile: Dockerfile
    image: airflow-with-r
    container_name: airflow
    env_file: .env
    restart: ${RESTART_MODE_1}
    ports:
      - ${AIRFLOW_PORT}
    volumes:
      - ${AIRFLOW_SYNC_VOLUME}
    depends_on:
      - mongodb
      - postgresql
    networks:
      - ${DEFAULT_NETWORK}
    deploy:
      resources:
        limits:
          cpus: 2
          memory: 6144M
    memswap_limit: 12288M
  
  rdesktop:
    image: ${RDESKTOP_IMAGE}
    container_name: rdesktop
    env_file: .env
    restart: ${RESTART_MODE_2}
    security_opt:
      - ${RDESKTOP_SEC} 
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Sao_Paulo
    ports:
      - ${RDESKTOP_PORT}
    volumes:
      - ${RDESKTOP_SYNC_VOLUME_1}
      - ${RDESKTOP_SYNC_VOLUME_2}
    depends_on:
      - mongodb
      - postgresql
    networks:
      - ${DEFAULT_NETWORK}
    devices:
      - ${RDESKTOP_DEVICE}
    shm_size: "1gb"
    deploy:
      resources:
        limits:
          cpus: 2
          memory: 4096M

  rstudio:
    image: ${RSTUDIO_IMAGE}
    container_name: rstudio
    restart: ${RESTART_MODE_2}
    environment:
      PASSWORD: ${RSTUDIO_PASSWORD}
    ports:
      - ${RSTUDIO_PORT}
    volumes:
      - ${RSTUDIO_SYNC_VOLUME}
    networks:
      - ${DEFAULT_NETWORK}
    deploy:
      resources:
        limits:
          cpus: 2
          memory: 6144M
    memswap_limit: 12288M
  
  #webservEx-GraphQL:
  #  image: ubuntu:24.04
  #  container_name: webservEx-GraphQL
  #  restart: always
  #  expose:
  #    - "3000"
  #  volumes:
  #    - /srv/study/dockerized/webservEx/webservEx_GraphQL:/webservEx_GraphQL
  #  working_dir: /webservEx_GraphQL
  #  networks:
  #    - ${DEFAULT_NETWORK}

  ngiNxy:
    build:
      context: ${NGINXY_PATH}
      dockerfile: Dockerfile
    image: nginxy
    container_name: ngiNxy
    restart: ${RESTART_MODE_1}
    ports:
      - ${NGINXY_PORT}
    volumes:
      - ${NGINXY_SYNC_VOLUME_1}
      - ${NGINXY_SYNC_VOLUME_2}
      - ${NGINXY_SYNC_VOLUME_3}
    #depends_on:
    #  - webservEx-GraphQL
    networks:
      - ${DEFAULT_NETWORK}
    deploy:
      resources:
        limits:
          cpus: 1
          memory: 2048M
    memswap_limit: 4096M

networks:
  dockerized-network:
    external: true
    name: ${DEFAULT_NETWORK}

volumes:
  pg-data:
    external: true
    name: ${POSTGRES_VOLUME}
  mongodb-data:
    external: true
    name: ${MONGODB_VOLUME}
  rdesktop-data:
    external: true
    name: ${RDESKTOP_VOLUME}
